@model EmergencyHoundWeb.ViewModels.vmAccountVerifyModel
@{
    ViewBag.Title = "Verify";
}

<section id="content" class="m-t-lg wrapper-md animated fadeInUp ">
    <div class="container aside-xxl">
        <section class="panel panel-default bg-white m-t-lg">
            <header class="panel-heading text-center">
                <strong>Set Permanent Password</strong>
            </header>
            @using (Html.BeginForm("Verify", "Account", FormMethod.Post, new { @class = "panel-body wrapper-lg" }))
            {
                @Html.HiddenFor(model => model.OAuth)

                if (TempData["Error"] != null)
                {
                    <div class="alert alert-danger">
                        <button type="button" class="close" data-dismiss="alert">×</button>
                        <h4><i class="fa fa-ok-sign"></i>Unable to Verify Account</h4>
                        <br />
                        @TempData["Error"]
                    </div>
                }

                if (TempData["Error"] == null || (TempData["Error"].ToString() ?? "") == "Change password failed.")
                {
                    <div class="form-group">
                        @Html.LabelFor(m => m.Password, new { @class = "" })
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control  input-lg focus", @placeholder = "Set Password", })
                        @Html.ValidationMessageFor(m => m.Password)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "" })
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control  input-lg", @placeholder = "Confirm Password", })
                        @Html.ValidationMessageFor(m => m.ConfirmPassword)
                    </div>
                    <button type="submit" class="btn btn-primary btn-block">Submit</button>
                }
            }

        </section>

    </div>
</section>
